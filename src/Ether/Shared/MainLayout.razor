@inherits LayoutComponentBase

@inject EtherClient Client
@inject TokenService TokenService
@inject NavigationManager UriHelper
@if (isAuthenticated)
{
    <MatAppBar Style="z-index: 100;" Class="mat">
        <MatAppBarRow>
            <MatAppBarSection>
                <MatIconButton Icon="@MatIconNames.Menu" OnClick="() => IsMenuOpened = !IsMenuOpened"></MatIconButton>
                <MatAppBarTitle>Ether - KPI reporting tool</MatAppBarTitle>
            </MatAppBarSection>
            <MatAppBarSection Align="MatAppBarSectionAlign.End">
                <MatIcon Icon="@MatIconNames.Account_circle" />&nbsp; Welcome, @currentUser.DisplayName
            </MatAppBarSection>
        </MatAppBarRow>
    </MatAppBar>
    <MatDrawerContainer Style="width: 100vw; height: 100vh;" Class="mat">
        <MatDrawer Opened="IsMenuOpened" Class="mat-elevation-z5">
            <MatAppBarAdjust></MatAppBarAdjust>
            <NavMenu />
        </MatDrawer>
        <MatDrawerContent Style="padding-left: 25px; padding-right: 25px;">
            <MatAppBarAdjust></MatAppBarAdjust>
            @Body
            <FooterBlock />
        </MatDrawerContent>
    </MatDrawerContainer>
}
else
{
    <SpinnerDialog IsShown="true" Label="Loading, please wait..." />

    @*<div class="text-center" style="padding-top:20%">
        <div class="spinner-border text-primary" role="status" style="width: 5rem; height: 5rem;">
            <span class="sr-only">Loading...</span>
        </div>
        <div>Signing you in...</div>
    </div>*@

}
@code{
    protected bool isAuthenticated = false;
    protected UserViewModel currentUser = UserViewModel.Anonymous;

    public bool IsMenuOpened { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        var token = await TokenService.GetToken();
        if (token == null || token.ExpiresAt <= DateTime.UtcNow)
        {
            UriHelper.NavigateTo("/login");
        }
        else
        {
            Client.SetAccessToken(token.Token);
            currentUser = await Client.GetCurrentUserAsync();
            isAuthenticated = true;
        }
    }
}