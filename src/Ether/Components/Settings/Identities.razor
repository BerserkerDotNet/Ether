<RichTable Items="Props.Items"
           GridTitle="Identities"
           FormTitle="Edit identity"
           OnSaveEdit="Props.OnSave"
           OnRefresh="Props.OnRefresh">
    <TableHeader>
        <th>Name</th>
        <th>Expiration Date</th>
        <th></th>
    </TableHeader>
    <TableBody Context="ctx">
        <td>@ctx.CurrentItem.Name</td>
        <td>@ctx.CurrentItem.ExpirationDate</td>
        <td>
            <div>
                <MatButton Label="Edit" Icon="@MatIconNames.Edit" Dense="true" OnClick="() => ctx.Edit()" />
                <DeleteButton OnDelete="async () => await Props.OnDelete.InvokeAsync(ctx.CurrentItem)" />
            </div>
        </td>
    </TableBody>
    <FormBody Context="ctx">
        <p>
            <MatTextField @bind-Value="ctx.CurrentItem.Name" Label="Name" FullWidth="true" />
            <ValidationMessage For="@(() => ctx.CurrentItem.Name)" />
        </p>
        <p>
            <MatTextField @bind-Value="ctx.CurrentItem.Token" Type="passowrd" Label="Token" FullWidth="true" />
            <ValidationMessage For="@(() => ctx.CurrentItem.Token)" />
        </p>
        <p>
            <MatDatePicker @bind-Value="ctx.CurrentItem.ExpirationDate" FullWidth="true" />
            <ValidationMessage For="@(() => ctx.CurrentItem.ExpirationDate)" />
        </p>
    </FormBody>
</RichTable>

@code
{
    [Parameter] public IdentitiesProps Props { get; set; }
}