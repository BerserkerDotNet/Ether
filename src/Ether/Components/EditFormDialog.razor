@typeparam T

<MatDialog @bind-IsOpen="@IsShown" CanBeClosed="false" Class="@additionalClasses">
    <MatDialogTitle>
        @Title
        <MatIconButton Icon="@MatIconNames.Fullscreen" ToggleIcon="@MatIconNames.Fullscreen_exit" Class="pull-right" OnClick="ToggleFullScreen" />
    </MatDialogTitle>
    <EditForm class="mdc-footer-bottom" Model="Item" OnValidSubmit="async () => await OnSave.InvokeAsync(null)">
        <MatDialogContent>
            @if (Item is object)
            {
                <FluentValidationValidator />
                @ChildContent(Item)
            }
        </MatDialogContent>
        <MatDialogActions>
            <MatButton Type="Submit">Save</MatButton>
            <MatButton OnClick="async () => await OnCancel.InvokeAsync(null)" Type="button">Cancel</MatButton>
        </MatDialogActions>
    </EditForm>
</MatDialog>

@code {
    const string DialogOpen = "mdc-dialog--open";
    const string NormalFormClass = "edit-form";
    const string FullScreenFormClass = "dialog-full-screen";

    private string additionalClasses = NormalFormClass;

    [Parameter] public bool IsShown { get; set; }

    [Parameter] public string Title { get; set; }

    [Parameter] public T Item { get; set; }

    [Parameter] public RenderFragment<T> ChildContent { get; set; }

    [Parameter] public EventCallback OnSave { get; set; }

    [Parameter] public EventCallback OnCancel { get; set; }

    protected override void OnParametersSet()
    {
        additionalClasses = NormalFormClass;
    }

    private void ToggleFullScreen()
    {
        additionalClasses = additionalClasses.Contains(NormalFormClass) ? FullScreenFormClass : NormalFormClass;

        if (IsShown)
        {
            // HACK: Stupid dialog forgets that it was open if you change class. Submit a bug to MatBlazor
            additionalClasses = $"{additionalClasses} {DialogOpen}";
        }
    }
}
