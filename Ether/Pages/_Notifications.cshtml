@inject IOptions<VSTSConfiguration> configuration
@{
    object notificationObj;
    string notification = "";
    if (TempData.TryGetValue(TempDataExtensions.NotificationData, out notificationObj))
    {
        notification = notificationObj as string;
    }
}

@if (configuration.Value.AccessToken == null || configuration.Value.InstanceName == null)
{
    <div class="alert alert-warning" role="alert">
        <strong>Warning!</strong> Configuration is not complete, make sure you have both InstanceName and AccessToken environment variables.
    </div>
}

@if (!string.IsNullOrEmpty(notification))
{
    var notificationParts = notification.Split('|');
    if (notificationParts.Count() == 2)
    {
        var type = notificationParts[0];
        var message = notificationParts[1];
        var cssClass = type == TempDataExtensions.NotificationError ? "alert-danger" : (type == TempDataExtensions.NotificationWarning ? "alert-warning" : "alert-success");
        var title = type == TempDataExtensions.NotificationError ? "Oops!" : (type == TempDataExtensions.NotificationWarning ? "Warning!" : "Success!");
        <div class="alert @cssClass alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>@title</strong> @message
        </div>
    }
}