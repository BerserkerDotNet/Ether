@page "/reports/view/{type}/{id:guid}"
@inject EtherClient Client
@inject IUriHelper UriHelper
<Card>
    <Header>
        @reportDisplayName
        <div class="pull-right d-print-none">
            <button class="btn btn-fill btn-default" onclick="@Print">Print</button>
            <button class="btn btn-fill btn-info" onclick="@NewReport">New report</button>
            <button class="btn btn-fill btn-success" onclick="@BackToList">Back to list</button>
        </div>
    </Header>
    <Body>
        @componentToRender
    </Body>
    <Footer>

    </Footer>
</Card>
@functions
{
    private string reportDisplayName = string.Empty;
    RenderFragment componentToRender;

    [Parameter]
    private Guid? Id { get; set; }

    [Parameter]
    private string Type { get; set; }

    protected override void OnParametersSet()
    {
        if (string.Equals(Type, "PullRequestsReport", StringComparison.OrdinalIgnoreCase))
        {
            reportDisplayName = "Pull requests report";
            componentToRender = b => RenderComponent<Ether.Components.Reports.PullRequestsReport>(b);
        }
        else if (string.Equals(Type, "AggregatedWorkitemsETAReport", StringComparison.OrdinalIgnoreCase))
        {
            reportDisplayName = "Aggregated workitems ETA report";
            componentToRender = b => RenderComponent<Ether.Components.Reports.AggregatedWorkitemsETAReport>(b);
        }
    }

    protected void RenderComponent<T>(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        where T : IComponent
    {
        builder.OpenComponent<T>(1);
        builder.AddAttribute(2, "Id", Id.Value);
        builder.CloseComponent();
    }

    protected void BackToList()
    {
        UriHelper.NavigateTo("/reports");
    }

    protected void NewReport()
    {
        UriHelper.NavigateTo("/");
    }

    protected void Print()
    {
        JsUtils.Print();
    }
}
