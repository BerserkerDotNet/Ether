@inject EtherClient Client

<EditableGrid Items="Props.Items"
              GridTitle="Profiles"
              ExistingTitle="Editing profile"
              NewTitle="New profile"
              OnSave="@(async (ProfileViewModel p) => await Props.OnChange.InvokeAsync(p))"
              OnDelete="@(async (ProfileViewModel p) => await Props.OnDelete.InvokeAsync(p))"
              OnRefresh="@(async () => await Props.OnRefresh.InvokeAsync(null))">
    <ListModeContent Context="ctx">
        <DataTable Items="@ctx.Items">
            <TableHeader>
                <th>Name</th>
                <th>Type</th>
                <th>Members</th>
                <th>Repositories</th>
            </TableHeader>
            <RowTemplate Context="profile">
                <td>@profile.Name</td>
                <td>@profile.Type</td>
                <td>@profile.Members.Count()</td>
                <td>@profile.Repositories.Count()</td>
            </RowTemplate>
            <ActionsTemplate Context="profile">
                <div>
                    <div class="dropdown btn-group" role="group">
                        <button id="btnGroupWorkItemsProfile" type="button" class="btn btn-info btn-fill dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Actions
                        </button>
                        <div class="dropdown-menu" aria-labelledby="btnGroupWorkItemsProfile">
                            <button class="dropdown-item" @onclick="@(async () => await Props.OnFetchWorkItems.InvokeAsync(profile.Members))">Fetch work items</button>
                            <button class="dropdown-item" @onclick="@(async () => await Props.OnResetWorkItems.InvokeAsync(profile.Members))">Reset work items</button>
                            <div class="dropdown-divider"></div>
                            <button class="dropdown-item" @onclick="@(async () => await Props.OnFetchPullRequests.InvokeAsync(profile.Members))">Fetch pull requests</button>
                            <button class="dropdown-item" @onclick="@(async () => await Props.OnResetPullRequests.InvokeAsync(profile.Members))">Reset pull requests</button>
                        </div>
                    </div>
                    <button class="btn btn-warning btn-fill" @onclick="@(() => ctx.Edit(profile))">Edit</button>
                    <button class="btn btn-danger btn-fill" @onclick="@(() => ctx.Delete(profile))">Delete</button>
                </div>
            </ActionsTemplate>
        </DataTable>
    </ListModeContent>
    <FormModeContent Context="ctx">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Name</label>
                    <InputText Class="form-control" @bind-Value="ctx.EditingItem.Name" />
                    <ValidationMessage For="@(() => ctx.EditingItem.Name)" />
                </div>
                <div class="form-group">
                    <label>Type</label>
                    <InputText Class="form-control" @bind-Value="ctx.EditingItem.Type" />
                    <ValidationMessage For="@(() => ctx.EditingItem.Type)" />
                </div>
                <div class="form-group">
                    <label>Members</label>
                    <Ether.Components.Form.OptionsSelector Options="@Props.MembersOptions"
                                                           @bind-Value="ctx.EditingItem.Members" />
                    <ValidationMessage For="@(() => ctx.EditingItem.Members)" />
                </div>
                <div class="form-group">
                    <label>Repositories</label>
                    <Ether.Components.Form.OptionsSelector Options="@Props.RepositoriesOptions"
                                                           @bind-Value="ctx.EditingItem.Repositories" />
                    <ValidationMessage For="@(() => ctx.EditingItem.Repositories)" />
                </div>
            </div>
            <div class="col-md-6">
                <EmailTemplate Model="ctx.EditingItem" />
            </div>
        </div>
    </FormModeContent>
</EditableGrid>

@code
{
    [Parameter] ProfilesProps Props { get; set; }
}