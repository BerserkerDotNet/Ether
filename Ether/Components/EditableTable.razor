@typeparam TItem
@inherits EditableTableBase<TItem>

@if (!IsEditing)
{
    <Card Title="@GridTitle" AdditionalClasses="card-600">
        <Header>
            <div class="pull-right">
                @if (!IsReadOnly)
                {
                    <button class="btn btn-primary btn-fill" @onclick="@New">New</button>
                }
                <button class="btn btn-success btn-fill" @onclick="@Refresh">Refresh</button>
            </div>
        </Header>
        <Body>
            @if (IsLoading)
            {
                <div class="text-center" style="padding-top:15%">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div>Loading...</div>
                </div>
            }
            else
            {
                @ListModeContent(this)
            }
        </Body>
        <Footer>

        </Footer>
    </Card>
}
else
{
    <EditForm Model="EditingItem" OnValidSubmit="Save">
        <FluentValidationValidator />
        <Card AdditionalClasses="card-600">
            <Header>
                @if ((EditingItem as ViewModelWithId).Id == Guid.Empty)
                {
                    @NewTitle
                }
                else
                {
                    @ExistingTitle
                }
            </Header>
            <Body>
                @FormModeContent(this)
            </Body>
            <Footer>
                <div class="pull-right">
                    <button type="submit" class="btn btn-success btn-fill">Save</button>
                    <button class="btn btn-danger btn-fill" @onclick="@Cancel">Cancel</button>
                </div>
            </Footer>
        </Card>
    </EditForm>
}

@code{
    [Parameter] string GridTitle { get; set; }
    [Parameter] string NewTitle { get; set; }
    [Parameter] string ExistingTitle { get; set; }

    [Parameter] bool IsReadOnly { get; set; }

    [Parameter] RenderFragment<EditableTableBase<TItem>> ListModeContent { get; set; }
    [Parameter] RenderFragment<EditableTableBase<TItem>> FormModeContent { get; set; }
}