@inherits NavItemBase
@implements IDisposable

<li class="nav-item @(IsActive ? "active": "")">
    @if (Item.Children.Any())
    {
        <a class="nav-link collapsed" data-toggle="collapse" data-target="#subMenu@(Item.GetHashCode())" aria-expanded="true" aria-controls="@(Item.Name)">
            <i class="fas fa-@Item.Icon"></i>
            <span>@Item.Name</span>
        </a>
        <div id="subMenu@(Item.GetHashCode())" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
            <div class="bg-white py-2 collapse-inner rounded">
                @foreach (var subMenu in Item.Children)
                {
                    <NavLink class="collapse-item" href="@(subMenu.Path)" Match="NavLinkMatch.Prefix">
                        <i class="fas fa-@subMenu.Icon"></i>
                        <span>@subMenu.Name</span>
                    </NavLink>
                }
            </div>
        </div>
    }
    else
    {
        <NavLink class="nav-link" href="@(Item.Path)" Match="NavLinkMatch.Prefix">
            <i class="fas fa-@Item.Icon"></i>
            <span>@Item.Name</span>
        </NavLink>
    }
</li>

@functions
{
    [Parameter] RenderFragment ChildContent { get; set; }
    [Parameter] MenuItem Item { get; set; }

    protected override string[] GetRelativeUrlPrefixes()
    {
        return string.IsNullOrEmpty(Item.Path) && Item.Children.Any() ?
            Item.Children.Select(m => m.Path).ToArray()
            : new[] { Item.Path };
    }
}